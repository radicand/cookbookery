name: Build and release api
concurrency: build-api

on:
  push:
    paths:
      - ".github/workflows/release-api.yaml"
      - server/hasura/*/**'
  workflow_dispatch:
jobs:
  build:
    environment:
      name: production
      url: https://${{ steps.envurl.outputs.url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
          # includePrerelease: true

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.9.7
        id: gitversion
        with:
          useConfigFile: true

      - name: Extract tag
        id: tagdata
        run: |
          echo "::set-output name=tag::${{ steps.gitversion.outputs.NuGetVersionV2 }}-${{ steps.gitversion.outputs.BuildMetaData || 0 }}"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/radicand/cookbookery-api
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=${{ steps.tagdata.outputs.tag }}

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: radicand
          password: ${{ secrets.CR_PAT }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          context: ./server/hasura
          file: ./server/hasura/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Extract env url
        id: envurl
        run: |
          echo "::set-output name=url::cookbookery-api.${{ secrets.KUBE_INGRESS_BASE_DOMAIN }}"

      - name: "Deploy"
        uses: "glopezep/helm@v1.7.1"
        with:
          helm: helm3
          release: "cookbookery-api"
          namespace: "cookbook"
          chart: "./server/hasura/manifest/cookbook-hasura"
          token: "${{ github.token }}"
          values: |
            image.repository: ghcr.io/radicand/cookbookery-api
            image.tag: ${{ steps.tagdata.outputs.tag }}
            dbUrl: ${{ secrets.DATABASE_URL }}
            metadataDbUrl: ${{ secrets.METADATA_DB_URL }}
            jwtSecret.audience: ${{ secrets.JWT_AUD }}
            jwtsecret.issuer: ${{ secrets.JWT_ISS }}
            jwtSecret.jwk_url: ${{ secrets.JWT_JWKS }}
            adminSecret: ${{ secrets.HASURA_ADMIN_SECRET }}
            corsDomains: ${{ secrets.HASURA_CORS_DOMAINS }}
            ingress.hosts[0].host: ${{ steps.envurl.outputs.url }}
            ingress.hosts[0].paths[0]: "/"
            CI_PROJECT_PATH_SLUG: ${{ github.ref_name }}
            CI_ENVIRONMENT_SLUG: 'production'
        env:
          KUBECONFIG_FILE: "${{ secrets.KUBE_CONFIG }}"
